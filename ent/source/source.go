// Code generated by entc, DO NOT EDIT.

package source

import (
	"fmt"
)

const (
	// Label holds the string label denoting the source type in the database.
	Label = "source"
	// FieldID holds the string denoting the id field in the database.
	FieldID       = "id"    // FieldURL holds the string denoting the url vertex property in the database.
	FieldURL      = "url"   // FieldTitle holds the string denoting the title vertex property in the database.
	FieldTitle    = "title" // FieldLanguage holds the string denoting the language vertex property in the database.
	FieldLanguage = "language"

	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgePosts holds the string denoting the posts edge name in mutations.
	EdgePosts = "posts"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"

	// Table holds the table name of the source in the database.
	Table = "sources"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "sources"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "source_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "sources"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "source_children"
	// PostsTable is the table the holds the posts relation/edge.
	PostsTable = "posts"
	// PostsInverseTable is the table name for the Post entity.
	// It exists in this package in order to avoid circular dependency with the "post" package.
	PostsInverseTable = "posts"
	// PostsColumn is the table column denoting the posts relation/edge.
	PostsColumn = "source_posts"
	// UsersTable is the table the holds the users relation/edge. The primary key declared below.
	UsersTable = "user_sources"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
)

// Columns holds all SQL columns for source fields.
var Columns = []string{
	FieldID,
	FieldURL,
	FieldTitle,
	FieldLanguage,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Source type.
var ForeignKeys = []string{
	"source_children",
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"user_id", "source_id"}
)

var ()

// Language defines the type for the language enum field.
type Language string

// LanguageRu is the default Language.
const DefaultLanguage = LanguageRu

// Language values.
const (
	LanguageRu Language = "ru"
	LanguageEn Language = "en"
)

func (s Language) String() string {
	return string(s)
}

// LanguageValidator is a validator for the "l" field enum values. It is called by the builders before save.
func LanguageValidator(l Language) error {
	switch l {
	case LanguageRu, LanguageEn:
		return nil
	default:
		return fmt.Errorf("source: invalid enum value for language field: %q", l)
	}
}
